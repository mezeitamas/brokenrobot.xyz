---
import type { Article, Organization, Person, WebSite, WithContext } from 'schema-dts';

import { SITE_METADATA } from '../../../consts';

type Props = {
    title: string;
    description: string;
    image: string;
    publishDate: Date;
    tags: string[];
};

const { title, description, image, publishDate, tags } = Astro.props;

const authorPerson: Person = {
    '@type': 'Person',
    '@id': `${Astro.site}about/#Person`,
    name: SITE_METADATA.AUTHOR.NAME,
    url: `${Astro.site}about/`,
    sameAs: [
        SITE_METADATA.AUTHOR.SOCIAL.GITHUB_URL,
        SITE_METADATA.AUTHOR.SOCIAL.LINKEDIN_URL,
        SITE_METADATA.AUTHOR.SOCIAL.MASTODON_URL,
        SITE_METADATA.AUTHOR.SOCIAL.TWITTER_URL
    ]
};

const publisher: Organization = {
    '@type': 'Organization',
    '@id': `${Astro.site}#Organization`,
    name: SITE_METADATA.TITLE,
    url: `${Astro.site}`
};

const website: WebSite = {
    '@type': 'WebSite',
    '@id': `${Astro.site}#WebSite`,
    name: SITE_METADATA.TITLE,
    url: `${Astro.site}`,
    inLanguage: SITE_METADATA.LANGUAGE,
    author: [authorPerson],
    publisher: publisher
};

const article: WithContext<Article> = {
    '@context': 'https://schema.org',
    '@type': 'Article',
    '@id': `${Astro.url}#Article`,
    headline: title,
    description: description,
    image: `${new URL(image, Astro.url)}`,
    keywords: tags,
    datePublished: publishDate.toISOString(),
    url: `${Astro.url}`,
    inLanguage: SITE_METADATA.LANGUAGE,
    author: [authorPerson],
    publisher: publisher,
    isPartOf: website
};
---

<script
    type="application/ld+json"
    set:html={JSON.stringify(article)}
/>
